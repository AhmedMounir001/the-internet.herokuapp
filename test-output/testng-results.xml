<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="27" passed="27" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-07T17:51:34 GMT+02:00" name="Default suite" finished-at="2021-11-07T17:54:21 GMT+02:00" duration-ms="166803">
    <groups>
    </groups>
    <test started-at="2021-11-07T17:51:34 GMT+02:00" name="Default test" finished-at="2021-11-07T17:54:21 GMT+02:00" duration-ms="166803">
      <class name="keyPress.HorizontalTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:keyPress.HorizontalTests@55b7a4e0]" started-at="2021-11-07T17:53:14 GMT+02:00" name="setup" finished-at="2021-11-07T17:53:24 GMT+02:00" duration-ms="9180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:keyPress.HorizontalTests@55b7a4e0]" started-at="2021-11-07T17:53:24 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:24 GMT+02:00" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSuccessfullMoveOnSlider()[pri:0, instance:keyPress.HorizontalTests@55b7a4e0]" started-at="2021-11-07T17:53:24 GMT+02:00" name="testSuccessfullMoveOnSlider" finished-at="2021-11-07T17:53:25 GMT+02:00" duration-ms="1429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfullMoveOnSlider -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:keyPress.HorizontalTests@55b7a4e0]" started-at="2021-11-07T17:53:25 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:25 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfullMoveOnSlider status=SUCCESS method=HorizontalTests.testSuccessfullMoveOnSlider()[pri:0, instance:keyPress.HorizontalTests@55b7a4e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:keyPress.HorizontalTests@55b7a4e0]" started-at="2021-11-07T17:53:25 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:53:26 GMT+02:00" duration-ms="1095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- keyPress.HorizontalTests -->
      <class name="navigation.NavigationTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:52:53 GMT+02:00" name="setup" finished-at="2021-11-07T17:53:02 GMT+02:00" duration-ms="8980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:02 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:02 GMT+02:00" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testNavigation()[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:02 GMT+02:00" name="testNavigation" finished-at="2021-11-07T17:53:12 GMT+02:00" duration-ms="9353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigation -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:12 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:12 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNavigation status=SUCCESS method=NavigationTest.testNavigation()[pri:0, instance:navigation.NavigationTest@6eda5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:12 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:12 GMT+02:00" duration-ms="582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testRightClickToOpenNewTab()[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:12 GMT+02:00" name="testRightClickToOpenNewTab" finished-at="2021-11-07T17:53:13 GMT+02:00" duration-ms="551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightClickToOpenNewTab -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:13 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:13 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRightClickToOpenNewTab status=SUCCESS method=NavigationTest.testRightClickToOpenNewTab()[pri:0, instance:navigation.NavigationTest@6eda5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:13 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:13 GMT+02:00" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testWitchToTabs()[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:13 GMT+02:00" name="testWitchToTabs" finished-at="2021-11-07T17:53:14 GMT+02:00" duration-ms="584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWitchToTabs -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:14 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:14 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWitchToTabs status=SUCCESS method=NavigationTest.testWitchToTabs()[pri:0, instance:navigation.NavigationTest@6eda5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:navigation.NavigationTest@6eda5c9]" started-at="2021-11-07T17:53:14 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:53:14 GMT+02:00" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- navigation.NavigationTest -->
      <class name="hovers.HoversTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:26 GMT+02:00" name="setup" finished-at="2021-11-07T17:53:32 GMT+02:00" duration-ms="5598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:32 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:32 GMT+02:00" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testHoverUser1()[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:32 GMT+02:00" name="testHoverUser1" finished-at="2021-11-07T17:53:34 GMT+02:00" duration-ms="1395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHoverUser1 -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:34 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:34 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHoverUser1 status=SUCCESS method=HoversTests.testHoverUser1()[pri:0, instance:hovers.HoversTests@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:34 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:34 GMT+02:00" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testHoverUser2()[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:34 GMT+02:00" name="testHoverUser2" finished-at="2021-11-07T17:53:35 GMT+02:00" duration-ms="610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHoverUser2 -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:35 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:35 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHoverUser2 status=SUCCESS method=HoversTests.testHoverUser2()[pri:0, instance:hovers.HoversTests@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:35 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:35 GMT+02:00" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testHoverUser3()[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:35 GMT+02:00" name="testHoverUser3" finished-at="2021-11-07T17:53:35 GMT+02:00" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHoverUser3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:35 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:53:36 GMT+02:00" duration-ms="570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:hovers.HoversTests@5f058f00]" started-at="2021-11-07T17:53:35 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:35 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHoverUser3 status=SUCCESS method=HoversTests.testHoverUser3()[pri:0, instance:hovers.HoversTests@5f058f00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
      </class> <!-- hovers.HoversTests -->
      <class name="dropdown.DropdownTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:36 GMT+02:00" name="setup" finished-at="2021-11-07T17:53:45 GMT+02:00" duration-ms="9689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:45 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:47 GMT+02:00" duration-ms="1093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testAllOptions()[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:47 GMT+02:00" name="testAllOptions" finished-at="2021-11-07T17:53:49 GMT+02:00" duration-ms="2066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllOptions -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:49 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:49 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAllOptions status=SUCCESS method=DropdownTests.testAllOptions()[pri:0, instance:dropdown.DropdownTests@192d43ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:49 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:49 GMT+02:00" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testFirstSelectedOption()[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:49 GMT+02:00" name="testFirstSelectedOption" finished-at="2021-11-07T17:53:50 GMT+02:00" duration-ms="732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstSelectedOption -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:50 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:50 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFirstSelectedOption status=SUCCESS method=DropdownTests.testFirstSelectedOption()[pri:0, instance:dropdown.DropdownTests@192d43ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:50 GMT+02:00" name="goHome" finished-at="2021-11-07T17:53:50 GMT+02:00" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSelectedOption()[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:50 GMT+02:00" name="testSelectedOption" finished-at="2021-11-07T17:53:51 GMT+02:00" duration-ms="1050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectedOption -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:51 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:53:51 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectedOption status=SUCCESS method=DropdownTests.testSelectedOption()[pri:0, instance:dropdown.DropdownTests@192d43ce] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:dropdown.DropdownTests@192d43ce]" started-at="2021-11-07T17:53:51 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:53:52 GMT+02:00" duration-ms="886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- dropdown.DropdownTests -->
      <class name="login.LoginTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:34 GMT+02:00" name="setup" finished-at="2021-11-07T17:51:49 GMT+02:00" duration-ms="14742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:49 GMT+02:00" name="goHome" finished-at="2021-11-07T17:51:49 GMT+02:00" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testCantLoginWithWrogUsername()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:49 GMT+02:00" name="testCantLoginWithWrogUsername" finished-at="2021-11-07T17:51:50 GMT+02:00" duration-ms="1570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCantLoginWithWrogUsername -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:50 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:51:50 GMT+02:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCantLoginWithWrogUsername status=SUCCESS method=LoginTests.testCantLoginWithWrogUsername()[pri:0, instance:login.LoginTests@61df66b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:50 GMT+02:00" name="goHome" finished-at="2021-11-07T17:51:51 GMT+02:00" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testCantLoginWithWrongPassword()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:51 GMT+02:00" name="testCantLoginWithWrongPassword" finished-at="2021-11-07T17:51:52 GMT+02:00" duration-ms="1061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCantLoginWithWrongPassword -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:52 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:51:52 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCantLoginWithWrongPassword status=SUCCESS method=LoginTests.testCantLoginWithWrongPassword()[pri:0, instance:login.LoginTests@61df66b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:52 GMT+02:00" name="goHome" finished-at="2021-11-07T17:51:52 GMT+02:00" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testCantLoginWithoutUserNameAndPassword()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:52 GMT+02:00" name="testCantLoginWithoutUserNameAndPassword" finished-at="2021-11-07T17:51:53 GMT+02:00" duration-ms="736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCantLoginWithoutUserNameAndPassword -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:53 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:51:53 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCantLoginWithoutUserNameAndPassword status=SUCCESS method=LoginTests.testCantLoginWithoutUserNameAndPassword()[pri:0, instance:login.LoginTests@61df66b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:53 GMT+02:00" name="goHome" finished-at="2021-11-07T17:51:53 GMT+02:00" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSuccessfulLogin()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:53 GMT+02:00" name="testSuccessfulLogin" finished-at="2021-11-07T17:51:54 GMT+02:00" duration-ms="853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulLogin -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:54 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:51:54 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulLogin status=SUCCESS method=LoginTests.testSuccessfulLogin()[pri:0, instance:login.LoginTests@61df66b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:login.LoginTests@61df66b6]" started-at="2021-11-07T17:51:54 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:51:54 GMT+02:00" duration-ms="596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- login.LoginTests -->
      <class name="alerts.ContextMenuTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:alerts.ContextMenuTests@72057ecf]" started-at="2021-11-07T17:53:52 GMT+02:00" name="setup" finished-at="2021-11-07T17:54:01 GMT+02:00" duration-ms="9437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.ContextMenuTests@72057ecf]" started-at="2021-11-07T17:54:01 GMT+02:00" name="goHome" finished-at="2021-11-07T17:54:02 GMT+02:00" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testRightClick()[pri:0, instance:alerts.ContextMenuTests@72057ecf]" started-at="2021-11-07T17:54:02 GMT+02:00" name="testRightClick" finished-at="2021-11-07T17:54:02 GMT+02:00" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightClick -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alerts.ContextMenuTests@72057ecf]" started-at="2021-11-07T17:54:02 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:54:03 GMT+02:00" duration-ms="586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:alerts.ContextMenuTests@72057ecf]" started-at="2021-11-07T17:54:02 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:54:02 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRightClick status=SUCCESS method=ContextMenuTests.testRightClick()[pri:0, instance:alerts.ContextMenuTests@72057ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
      </class> <!-- alerts.ContextMenuTests -->
      <class name="keyPress.KeyPressTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:keyPress.KeyPressTests@20deea7f]" started-at="2021-11-07T17:51:54 GMT+02:00" name="setup" finished-at="2021-11-07T17:52:02 GMT+02:00" duration-ms="8097" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:keyPress.KeyPressTests@20deea7f]" started-at="2021-11-07T17:52:02 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:03 GMT+02:00" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testBackSpace()[pri:0, instance:keyPress.KeyPressTests@20deea7f]" started-at="2021-11-07T17:52:03 GMT+02:00" name="testBackSpace" finished-at="2021-11-07T17:52:03 GMT+02:00" duration-ms="444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackSpace -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:keyPress.KeyPressTests@20deea7f]" started-at="2021-11-07T17:52:03 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:03 GMT+02:00" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:keyPress.KeyPressTests@20deea7f]" started-at="2021-11-07T17:52:03 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:03 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBackSpace status=SUCCESS method=KeyPressTests.testBackSpace()[pri:0, instance:keyPress.KeyPressTests@20deea7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method signature="testPi()[pri:0, instance:keyPress.KeyPressTests@20deea7f]" started-at="2021-11-07T17:52:03 GMT+02:00" name="testPi" finished-at="2021-11-07T17:52:04 GMT+02:00" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPi -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:keyPress.KeyPressTests@20deea7f]" started-at="2021-11-07T17:52:04 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:04 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPi status=SUCCESS method=KeyPressTests.testPi()[pri:0, instance:keyPress.KeyPressTests@20deea7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:keyPress.KeyPressTests@20deea7f]" started-at="2021-11-07T17:52:04 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:52:04 GMT+02:00" duration-ms="603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- keyPress.KeyPressTests -->
      <class name="alerts.EntryAdTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:alerts.EntryAdTests@3835c46]" started-at="2021-11-07T17:52:04 GMT+02:00" name="setup" finished-at="2021-11-07T17:52:12 GMT+02:00" duration-ms="8154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.EntryAdTests@3835c46]" started-at="2021-11-07T17:52:12 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:13 GMT+02:00" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testClickOnClose()[pri:0, instance:alerts.EntryAdTests@3835c46]" started-at="2021-11-07T17:52:13 GMT+02:00" name="testClickOnClose" finished-at="2021-11-07T17:52:13 GMT+02:00" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickOnClose -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:alerts.EntryAdTests@3835c46]" started-at="2021-11-07T17:52:13 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:13 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickOnClose status=SUCCESS method=EntryAdTests.testClickOnClose()[pri:0, instance:alerts.EntryAdTests@3835c46] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alerts.EntryAdTests@3835c46]" started-at="2021-11-07T17:52:13 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:52:14 GMT+02:00" duration-ms="577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alerts.EntryAdTests -->
      <class name="frames.FramesTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:frames.FramesTests@6973b51b]" started-at="2021-11-07T17:54:03 GMT+02:00" name="setup" finished-at="2021-11-07T17:54:12 GMT+02:00" duration-ms="8999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:frames.FramesTests@6973b51b]" started-at="2021-11-07T17:54:12 GMT+02:00" name="goHome" finished-at="2021-11-07T17:54:12 GMT+02:00" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="TestTextAreaEditor()[pri:0, instance:frames.FramesTests@6973b51b]" started-at="2021-11-07T17:54:12 GMT+02:00" name="TestTextAreaEditor" finished-at="2021-11-07T17:54:20 GMT+02:00" duration-ms="8319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestTextAreaEditor -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:frames.FramesTests@6973b51b]" started-at="2021-11-07T17:54:20 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:54:21 GMT+02:00" duration-ms="575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:frames.FramesTests@6973b51b]" started-at="2021-11-07T17:54:20 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:54:20 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestTextAreaEditor status=SUCCESS method=FramesTests.TestTextAreaEditor()[pri:0, instance:frames.FramesTests@6973b51b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
      </class> <!-- frames.FramesTests -->
      <class name="waits.DynamicLoadingAndWaitTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec]" started-at="2021-11-07T17:52:14 GMT+02:00" name="setup" finished-at="2021-11-07T17:52:22 GMT+02:00" duration-ms="8068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec]" started-at="2021-11-07T17:52:22 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:22 GMT+02:00" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testDynamicLoadingExample1()[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec]" started-at="2021-11-07T17:52:22 GMT+02:00" name="testDynamicLoadingExample1" finished-at="2021-11-07T17:52:28 GMT+02:00" duration-ms="5947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDynamicLoadingExample1 -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec]" started-at="2021-11-07T17:52:28 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:28 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDynamicLoadingExample1 status=SUCCESS method=DynamicLoadingAndWaitTests.testDynamicLoadingExample1()[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec]" started-at="2021-11-07T17:52:28 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:28 GMT+02:00" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testDynamicLoadingExample2()[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec]" started-at="2021-11-07T17:52:28 GMT+02:00" name="testDynamicLoadingExample2" finished-at="2021-11-07T17:52:34 GMT+02:00" duration-ms="5678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDynamicLoadingExample2 -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec]" started-at="2021-11-07T17:52:34 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:34 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDynamicLoadingExample2 status=SUCCESS method=DynamicLoadingAndWaitTests.testDynamicLoadingExample2()[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:waits.DynamicLoadingAndWaitTests@20ce78ec]" started-at="2021-11-07T17:52:34 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:52:34 GMT+02:00" duration-ms="598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- waits.DynamicLoadingAndWaitTests -->
      <class name="alerts.JSAlertTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:34 GMT+02:00" name="setup" finished-at="2021-11-07T17:52:42 GMT+02:00" duration-ms="7927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:42 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:43 GMT+02:00" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testAcceptAlert()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:43 GMT+02:00" name="testAcceptAlert" finished-at="2021-11-07T17:52:43 GMT+02:00" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcceptAlert -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:43 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:43 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAcceptAlert status=SUCCESS method=JSAlertTests.testAcceptAlert()[pri:0, instance:alerts.JSAlertTests@393671df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:43 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:43 GMT+02:00" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testCancelConfirmAlert()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:43 GMT+02:00" name="testCancelConfirmAlert" finished-at="2021-11-07T17:52:44 GMT+02:00" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCancelConfirmAlert -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:44 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:44 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCancelConfirmAlert status=SUCCESS method=JSAlertTests.testCancelConfirmAlert()[pri:0, instance:alerts.JSAlertTests@393671df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:44 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:44 GMT+02:00" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testOKConfirmAlert()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:44 GMT+02:00" name="testOKConfirmAlert" finished-at="2021-11-07T17:52:44 GMT+02:00" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOKConfirmAlert -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:44 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:44 GMT+02:00" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:44 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:44 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOKConfirmAlert status=SUCCESS method=JSAlertTests.testOKConfirmAlert()[pri:0, instance:alerts.JSAlertTests@393671df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method signature="testtyppingInPromptAndCancel()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:44 GMT+02:00" name="testtyppingInPromptAndCancel" finished-at="2021-11-07T17:52:45 GMT+02:00" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testtyppingInPromptAndCancel -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:45 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:45 GMT+02:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testtyppingInPromptAndCancel status=SUCCESS method=JSAlertTests.testtyppingInPromptAndCancel()[pri:0, instance:alerts.JSAlertTests@393671df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:45 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:45 GMT+02:00" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testtyppingInPromptAndOK()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:45 GMT+02:00" name="testtyppingInPromptAndOK" finished-at="2021-11-07T17:52:45 GMT+02:00" duration-ms="375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testtyppingInPromptAndOK -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:45 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:52:46 GMT+02:00" duration-ms="610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:alerts.JSAlertTests@393671df]" started-at="2021-11-07T17:52:45 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:45 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testtyppingInPromptAndOK status=SUCCESS method=JSAlertTests.testtyppingInPromptAndOK()[pri:0, instance:alerts.JSAlertTests@393671df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
      </class> <!-- alerts.JSAlertTests -->
      <class name="alerts.FileUploadTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:alerts.FileUploadTests@56620197]" started-at="2021-11-07T17:52:46 GMT+02:00" name="setup" finished-at="2021-11-07T17:52:51 GMT+02:00" duration-ms="4915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goHome()[pri:0, instance:alerts.FileUploadTests@56620197]" started-at="2021-11-07T17:52:51 GMT+02:00" name="goHome" finished-at="2021-11-07T17:52:51 GMT+02:00" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goHome -->
        <test-method signature="testSuccessflUploadFile()[pri:0, instance:alerts.FileUploadTests@56620197]" started-at="2021-11-07T17:52:51 GMT+02:00" name="testSuccessflUploadFile" finished-at="2021-11-07T17:52:53 GMT+02:00" duration-ms="1733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessflUploadFile -->
        <test-method is-config="true" signature="screenshotFailure(org.testng.ITestResult)[pri:0, instance:alerts.FileUploadTests@56620197]" started-at="2021-11-07T17:52:53 GMT+02:00" name="screenshotFailure" finished-at="2021-11-07T17:52:53 GMT+02:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessflUploadFile status=SUCCESS method=FileUploadTests.testSuccessflUploadFile()[pri:0, instance:alerts.FileUploadTests@56620197] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:alerts.FileUploadTests@56620197]" started-at="2021-11-07T17:52:53 GMT+02:00" name="tearDown" finished-at="2021-11-07T17:52:53 GMT+02:00" duration-ms="582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- alerts.FileUploadTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
